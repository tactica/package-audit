require_relative './base'
require_relative '../enum/vulnerability_type'
require_relative '../util/bash_color'

module Package
  module Audit
    module Formatter
      class Vulnerability < Formatter::Base
        def initialize(vulnerabilities)
          super()
          @vulnerabilities = vulnerabilities
        end

        def format # rubocop:disable Metrics/MethodLength
          formatted = @vulnerabilities.map do |vulnerability|
            case vulnerability
            when Enum::VulnerabilityType::UNKNOWN, Enum::VulnerabilityType::CRITICAL, Enum::VulnerabilityType::HIGH
              Util::BashColor.red(vulnerability)
            when Enum::VulnerabilityType::MEDIUM
              Util::BashColor.orange(vulnerability)
            when Enum::VulnerabilityType::LOW
              Util::BashColor.yellow(vulnerability)
            else
              vulnerability
            end
          end

          formatted.group_by(&:itself).map { |k, v| "#{k}(#{v.length})" }.join(' ')
        end

        private

        def group; end
      end
    end
  end
end
